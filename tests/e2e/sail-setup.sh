#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å Laravel Sail

echo "üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å Laravel Sail..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "artisan" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Sail —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if [ ! -f "./vendor/bin/sail" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: Laravel Sail –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π: composer require laravel/sail"
    exit 1
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Sail –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
./vendor/bin/sail down

# –ó–∞–ø—É—Å–∫–∞–µ–º Sail
echo "üöÄ –ó–∞–ø—É—Å–∫ Laravel Sail..."
./vendor/bin/sail up -d

# –ñ–¥–µ–º, –ø–æ–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—Å—Ç—è—Ç—Å—è
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
max_attempts=10
attempt=1

while [ $attempt -le $max_attempts ]; do
    if curl -s http://localhost > /dev/null; then
        echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://localhost"
        break
    else
        echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–æ..."
        sleep 10
        ((attempt++))
    fi
done

if [ $attempt -gt $max_attempts ]; then
    echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å—Ç–∞–ª–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º –∑–∞ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –∏ —Å–∏–¥–µ—Ä—ã
echo "üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –∏ —Å–∏–¥–µ—Ä–æ–≤..."
./vendor/bin/sail artisan migrate:fresh --seed

# –û—á–∏—â–∞–µ–º –∫—ç—à
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞..."
./vendor/bin/sail artisan cache:clear
./vendor/bin/sail artisan config:clear
./vendor/bin/sail artisan route:clear
./vendor/bin/sail artisan view:clear

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
echo "üë• –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."
./vendor/bin/sail artisan tinker --execute="
use App\Models\User;
use App\Models\Role;

// –°–æ–∑–¥–∞–µ–º —Ä–æ–ª–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
\$roles = [
    ['name' => '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', 'slug' => 'admin', 'description' => '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ'],
    ['name' => '–ú–∞—Å—Ç–µ—Ä', 'slug' => 'master', 'description' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º –∏ –∑–∞—è–≤–∫–∞–º–∏'],
    ['name' => '–¢–µ—Ö–Ω–∏–∫', 'slug' => 'technician', 'description' => '–†–∞–±–æ—Ç–∞ —Å –∑–∞—è–≤–∫–∞–º–∏'],
    ['name' => '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 'slug' => 'user', 'description' => '–ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø']
];

foreach (\$roles as \$roleData) {
    Role::firstOrCreate(['slug' => \$roleData['slug']], \$roleData);
}

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
\$testUsers = [
    [
        'name' => '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¢–µ—Å—Ç',
        'phone' => '+7 (999) 123-45-67',
        'email' => 'admin@test.com',
        'password' => bcrypt('password123'),
        'role_id' => Role::where('slug', 'admin')->first()->id,
        'is_active' => true
    ],
    [
        'name' => '–ú–∞—Å—Ç–µ—Ä –¢–µ—Å—Ç',
        'phone' => '+7 (999) 123-45-68',
        'email' => 'master@test.com',
        'password' => bcrypt('password123'),
        'role_id' => Role::where('slug', 'master')->first()->id,
        'is_active' => true
    ],
    [
        'name' => '–¢–µ—Ö–Ω–∏–∫ –¢–µ—Å—Ç',
        'phone' => '+7 (999) 123-45-69',
        'email' => 'technician@test.com',
        'password' => bcrypt('password123'),
        'role_id' => Role::where('slug', 'technician')->first()->id,
        'is_active' => true
    ],
    [
        'name' => '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¢–µ—Å—Ç',
        'phone' => '+7 (999) 123-45-70',
        'email' => 'user@test.com',
        'password' => bcrypt('password123'),
        'role_id' => Role::where('slug', 'user')->first()->id,
        'is_active' => true
    ]
];

foreach (\$testUsers as \$userData) {
    User::firstOrCreate(['email' => \$userData['email']], \$userData);
}

echo '–¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!';
"

echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "cd tests/e2e"
echo "npm run test"
echo ""
echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å –≤–∏–¥–∏–º—ã–º –±—Ä–∞—É–∑–µ—Ä–æ–º:"
echo "npm run test:headed"
