#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è ICT —Å–∏—Å—Ç–µ–º—ã..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "package.json" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ tests/e2e"
    exit 1
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
npm install

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä—ã Playwright
echo "üåê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—Ä–∞—É–∑–µ—Ä–æ–≤ Playwright..."
npm run test:install

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
cd ../..
php artisan migrate:fresh --seed

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
echo "üë• –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."
php artisan tinker --execute="
use App\Models\User;
use App\Models\Role;

// –°–æ–∑–¥–∞–µ–º —Ä–æ–ª–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
\$roles = [
    ['name' => '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', 'slug' => 'admin', 'description' => '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ'],
    ['name' => '–ú–∞—Å—Ç–µ—Ä', 'slug' => 'master', 'description' => '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º –∏ –∑–∞—è–≤–∫–∞–º–∏'],
    ['name' => '–¢–µ—Ö–Ω–∏–∫', 'slug' => 'technician', 'description' => '–†–∞–±–æ—Ç–∞ —Å –∑–∞—è–≤–∫–∞–º–∏'],
    ['name' => '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 'slug' => 'user', 'description' => '–ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø']
];

foreach (\$roles as \$roleData) {
    Role::firstOrCreate(['slug' => \$roleData['slug']], \$roleData);
}

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
\$testUsers = [
    [
        'name' => '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¢–µ—Å—Ç',
        'phone' => '+7 (999) 123-45-67',
        'email' => 'admin@test.com',
        'password' => bcrypt('password123'),
        'role_id' => Role::where('slug', 'admin')->first()->id,
        'is_active' => true
    ],
    [
        'name' => '–ú–∞—Å—Ç–µ—Ä –¢–µ—Å—Ç',
        'phone' => '+7 (999) 123-45-68',
        'email' => 'master@test.com',
        'password' => bcrypt('password123'),
        'role_id' => Role::where('slug', 'master')->first()->id,
        'is_active' => true
    ],
    [
        'name' => '–¢–µ—Ö–Ω–∏–∫ –¢–µ—Å—Ç',
        'phone' => '+7 (999) 123-45-69',
        'email' => 'technician@test.com',
        'password' => bcrypt('password123'),
        'role_id' => Role::where('slug', 'technician')->first()->id,
        'is_active' => true
    ],
    [
        'name' => '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¢–µ—Å—Ç',
        'phone' => '+7 (999) 123-45-70',
        'email' => 'user@test.com',
        'password' => bcrypt('password123'),
        'role_id' => Role::where('slug', 'user')->first()->id,
        'is_active' => true
    ]
];

foreach (\$testUsers as \$userData) {
    User::firstOrCreate(['email' => \$userData['email']], \$userData);
}

echo '–¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!';
"

# –û—á–∏—â–∞–µ–º –∫—ç—à
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞..."
php artisan cache:clear
php artisan config:clear
php artisan route:clear
php artisan view:clear

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".env" ]; then
    echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env..."
    cp .env.example .env
    php artisan key:generate
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π..."
php artisan migrate

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–¥–µ—Ä—ã
echo "üå± –ó–∞–ø—É—Å–∫ —Å–∏–¥–µ—Ä–æ–≤..."
php artisan db:seed

echo "‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "cd tests/e2e"
echo "npm run test"
echo ""
echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å –≤–∏–¥–∏–º—ã–º –±—Ä–∞—É–∑–µ—Ä–æ–º:"
echo "npm run test:headed"
echo ""
echo "–î–ª—è –æ—Ç–ª–∞–¥–∫–∏:"
echo "npm run test:debug"
