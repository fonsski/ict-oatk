services:
    laravel.test:
        build:
            context: "./vendor/laravel/sail/runtimes/8.4"
            dockerfile: Dockerfile
            args:
                WWWGROUP: "${WWWGROUP}"
        image: "sail-8.4/app"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "${APP_PORT:-80}:80"
            - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
            XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
            IGNITION_LOCAL_SITES_PATH: "${PWD}"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            - mysql

    telegram-bot:
        image: "sail-8.4/app"
        restart: unless-stopped
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            CONTAINER_ROLE: "telegram-bot"
            TELEGRAM_BOT_TOKEN: "${TELEGRAM_BOT_TOKEN}"
        volumes:
            - ".:/var/www/html"
            - "telegram-bot-data:/var/www/html/storage/telegram"
        networks:
            - sail
        depends_on:
            - laravel.test
            - mysql
        healthcheck:
            test: ["CMD", "php", "artisan", "telegram:bot", "--mode=webhook"]
            interval: 60s
            timeout: 10s
            retries: 3
            start_period: 30s
        command: php artisan telegram:bot --mode=webhook
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"

    websocket-server:
        image: "sail-8.4/app"
        restart: unless-stopped
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            CONTAINER_ROLE: "websocket-server"
            WEBSOCKET_HOST: "0.0.0.0"
            WEBSOCKET_PORT: "8080"
            WEBSOCKET_ENABLED: "true"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        ports:
            - "8080:8080"
        depends_on:
            - laravel.test
            - mysql
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080/test"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
        command: php artisan websocket:serve --port=8080
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"

    mysql:
        image: "mysql/mysql-server:8.0"
        ports:
            - "${FORWARD_DB_PORT:-3306}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - "sail-mysql:/var/lib/mysql"
            - "./vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - "-p${DB_PASSWORD}"
            retries: 3
            timeout: 5s
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    telegram-bot-data:
        driver: local
